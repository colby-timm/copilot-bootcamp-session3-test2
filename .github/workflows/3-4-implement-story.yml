name: Step 3-4 # Implement the Priority Field using Story Requirements and UI Sketch

on:
  push:
    branches:
      - feature/requirements-and-documentation
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  issues: write

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.4.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # START: Check practical exercise

      - name: Check put request exists in backend packages/backend/src/app.js and called in packages/frontend/src/App.js
        id: check_put_request_exists
        continue-on-error: true
        run: |
          grep -q "app.put('/api/items/:id" packages/backend/src/app.js
          grep -q "method: 'PUT'" packages/frontend/src/App.js

      - name: Check that mock color requirements are followed in App.css
        id: check_mock_color_requirements
        continue-on-error: true
        run: |
          grep -q "#07F2E6" packages/frontend/src/App.css
          grep -q "#7A7A7A" packages/frontend/src/App.css

      - name: Check that priority fields exist in packages/frontend/src/App.js
        id: check_priority_fields
        continue-on-error: true
        run: |
          grep -q "P1" packages/frontend/src/App.js
          grep -q "P2" packages/frontend/src/App.js
          grep -q "P3" packages/frontend/src/App.js

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 3-4
            passed: ${{ steps.check_put_request_exists.outcome == 'success' && steps.check_mock_color_requirements.outcome == 'success' && steps.check_priority_fields.outcome == 'success' }}
            results_table:
              - description: "The file 'packages/backend/src/app.js' should have a PUT request for updating items and referenced in packages/frontend/src/App.js."
                passed: ${{ steps.check_put_request_exists.outcome == 'success' }}
                error_message: "The file 'packages/backend/src/app.js' does not have a PUT request for updating items or is not referenced in packages/frontend/src/App.js."
              - description: "The file 'packages/frontend/src/App.css' should reference the color '#07F2E6' for selected priority items and '#7A7A7A' for unselected priority items."
                passed: ${{ steps.check_mock_color_requirements.outcome == 'success' }}
                error_message: "The file 'packages/frontend/src/App.css' does not reference the required colors."
              - description: "The file 'packages/frontend/src/App.js' should reference priority fields 'P1', 'P2', and 'P3'."
                passed: ${{ steps.check_priority_fields.outcome == 'success' }}
                error_message: "The file 'packages/frontend/src/App.js' does not reference all required priority fields."

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      # END: Check practical exercise

      - name: Success
        run: echo "Cloud architecture overview is present and correct."

      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file ".github/steps/3-x-review.md"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow
        run: |
          gh workflow disable "Step 3-4"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
