name: Step 3-1 # Collect Requirements

on:
  push:
    branches:
      - feature/requirements-and-documentation
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  issues: write

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.4.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # START: Check practical exercise

      - name: Check for prd-todo.md
        id: check-prd
        continue-on-error: true
        run: |
          if [ ! -f docs/prd-todo.md ]; then
            echo "docs/prd-todo.md not found!"
            exit 1
          fi

      - name: Check prd-todo.md contains required sections
        id: check-prd-todo-md
        continue-on-error: true
        run: |
          required_headers=(
            "## 1. Overview"
            "## 2. MVP Scope"
            "## 3. Post-MVP Scope"
            "## 4. Out of Scope"
          )

          missing=0
          for h in "${required_headers[@]}"; do
            if ! grep -qF "$h" docs/prd-todo.md; then
              echo "::error::Missing header: $h"
              missing=1
            else
              echo "Found: $h"
            fi
          done

          if [ $missing -ne 0 ]; then
            echo "One or more required headers are missing."
            exit 1
          fi

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 3-1
            passed: ${{ steps.check-prd.outcome == 'success' && steps.check-prd-todo-md.outcome == 'success' }}
            results_table:
              - description: "The file 'prod-todo.md' should exist under `docs/` folder"
                passed: ${{ steps.check-prd.outcome == 'success' }}
                error_message: "The file 'docs/prd-todo.md' was not found."
              - description: "The file 'docs/prd-todo.md' should contain sections for Overview, MVP Scope, Post-MVP Scope, and Out of Scope"
                passed: ${{ steps.check-prd-todo-md.outcome == 'success' }}
                error_message: "The file 'docs/prd-todo.md' does not contain all required sections."

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      # END: Check practical exercise

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number: 3-2

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY" \
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

      - name: Success
        run: echo "The PRD for the MVP and Post-MVP requirements is present and correct."

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file ".github/steps/3-2-generate-epics-and-stories.md"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 3-1"
          gh workflow enable "Step 3-2"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
